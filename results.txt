lexer-0.1.0.0: unregistering (local file changes: test/Spec.hs)
lexer> build (lib + exe + test)
Preprocessing library for lexer-0.1.0.0..
Building library for lexer-0.1.0.0..
Preprocessing test suite 'lexer-test' for lexer-0.1.0.0..
Building test suite 'lexer-test' for lexer-0.1.0.0..
Warning: Enabling workaround for Main module 'Main' listed in 'other-modules'
illegally!
[10 of 10] Compiling Main
Linking .stack-work/dist/x86_64-linux/Cabal-3.2.1.0/build/lexer-test/lexer-test ...
Preprocessing executable 'lexer-exe' for lexer-0.1.0.0..
Building executable 'lexer-exe' for lexer-0.1.0.0..
lexer> copy/register
Installing library in /home/choi/work/lang/haskell/syncomp/hslexer/.stack-work/install/x86_64-linux/a1153900378277bd6c133c044f12ba6512faf6d382f46d0cdecb40ea9f87077c/8.10.4/lib/x86_64-linux-ghc-8.10.4/lexer-0.1.0.0-LjNM8ROUj9T51NZ1q8UbOw
Installing executable lexer-exe in /home/choi/work/lang/haskell/syncomp/hslexer/.stack-work/install/x86_64-linux/a1153900378277bd6c133c044f12ba6512faf6d382f46d0cdecb40ea9f87077c/8.10.4/bin
Registering library for lexer-0.1.0.0..
lexer> test (suite: lexer-test)

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]

["_"]
["as"]
["hiding"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["-"]
["*"]
["."]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]

["TIGHT_INFIX_AT","aexp"]
["_"]
["as"]
["hiding"]
["if","ifgdpats"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal {,White Nonterminal fbinds,White Terminal }]
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal `,White Terminal _,White Terminal `]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]

["TIGHT_INFIX_AT","aexp"]
["{","fbinds","}"]
["_"]
["as"]
["hiding"]
["if","ifgdpats"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["`","_","`"]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal {,White Nonterminal fbinds,White Terminal }]
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal `,White Terminal _,White Terminal `]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]

["TIGHT_INFIX_AT","aexp"]
["{","fbinds","}"]
["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["`","_","`"]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal {,White Nonterminal fbinds,White Terminal }]
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal `,White Terminal _,White Terminal `]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]
[White Terminal then,White Nonterminal exp,White Nonterminal optSemi,White Terminal else,White Nonterminal exp]

["TIGHT_INFIX_AT","aexp"]
["{","fbinds","}"]
["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["`","_","`"]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]
["then","exp","optSemi","else","exp"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal {,White Nonterminal fbinds,White Terminal }]
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal `,White Terminal _,White Terminal `]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]
[White Terminal then,White Nonterminal exp,White Nonterminal optSemi,White Terminal else,White Nonterminal exp]

["TIGHT_INFIX_AT","aexp"]
["{","fbinds","}"]
["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["`","_","`"]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]
["then","exp","optSemi","else","exp"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal {,White Nonterminal fbinds,White Terminal }]
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal `,White Terminal _,White Terminal `]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]
[White Terminal then,White Nonterminal exp,White Nonterminal optSemi,White Terminal else,White Nonterminal exp]

["TIGHT_INFIX_AT","aexp"]
["{","fbinds","}"]
["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["`","_","`"]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]
["then","exp","optSemi","else","exp"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["hiding"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["hiding"]
["if","ifgdpats"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["hiding"]
["if","ifgdpats"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]

["_"]
["as"]
["hiding"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["-"]
["*"]
["."]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]

["TIGHT_INFIX_AT","aexp"]
["_"]
["as"]
["hiding"]
["if","ifgdpats"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal {,White Nonterminal fbinds,White Terminal }]
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal `,White Terminal _,White Terminal `]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]

["TIGHT_INFIX_AT","aexp"]
["{","fbinds","}"]
["_"]
["as"]
["hiding"]
["if","ifgdpats"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["`","_","`"]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal {,White Nonterminal fbinds,White Terminal }]
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal `,White Terminal _,White Terminal `]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]

["TIGHT_INFIX_AT","aexp"]
["{","fbinds","}"]
["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["`","_","`"]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal {,White Nonterminal fbinds,White Terminal }]
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal `,White Terminal _,White Terminal `]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]
[White Terminal then,White Nonterminal exp,White Nonterminal optSemi,White Terminal else,White Nonterminal exp]

["TIGHT_INFIX_AT","aexp"]
["{","fbinds","}"]
["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["`","_","`"]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]
["then","exp","optSemi","else","exp"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal {,White Nonterminal fbinds,White Terminal }]
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal `,White Terminal _,White Terminal `]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]
[White Terminal then,White Nonterminal exp,White Nonterminal optSemi,White Terminal else,White Nonterminal exp]

["TIGHT_INFIX_AT","aexp"]
["{","fbinds","}"]
["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["`","_","`"]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]
["then","exp","optSemi","else","exp"]

Candidates:
[White Terminal TIGHT_INFIX_AT,White Nonterminal aexp]
[White Terminal {,White Nonterminal fbinds,White Terminal }]
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal PREFIX_AT,White Nonterminal atype]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]
[White Terminal :]
[White Terminal ::,White Nonterminal ctype]
[White Terminal -]
[White Terminal *]
[White Terminal .]
[White Terminal `,White Terminal _,White Terminal `]
[White Terminal VARSYM]
[White Terminal CONSYM]
[White Terminal QVARSYM]
[White Terminal QCONSYM]
[White Terminal ;]
[White Terminal then,White Nonterminal exp,White Nonterminal optSemi,White Terminal else,White Nonterminal exp]

["TIGHT_INFIX_AT","aexp"]
["{","fbinds","}"]
["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["PREFIX_AT","atype"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]
[":"]
["::","ctype"]
["-"]
["*"]
["."]
["`","_","`"]
["VARSYM"]
["CONSYM"]
["QVARSYM"]
["QCONSYM"]
[";"]
["then","exp","optSemi","else","exp"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["hiding"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["hiding"]
["if","ifgdpats"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["hiding"]
["if","ifgdpats"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]

Candidates:
[White Terminal _]
[White Terminal as]
[White Terminal case,White Nonterminal exp,White Terminal of,White Nonterminal altslist]
[White Terminal hiding]
[White Terminal if,White Nonterminal ifgdpats]
[White Terminal let,White Nonterminal binds,White Terminal in,White Nonterminal exp]
[White Terminal qualified]
[White Terminal forall]
[White Terminal export]
[White Terminal family]
[White Terminal signature]
[White Terminal \\,White Terminal lcase,White Nonterminal altslist]
[White Terminal -,White Nonterminal fexp]
[White Terminal PREFIX_TILDE,White Nonterminal aexp]
[White Terminal PREFIX_BANG,White Nonterminal aexp]
[White Terminal [,White Terminal ]]
[White Terminal (,White Terminal )]
[White Terminal (#,White Terminal #)]
[White Terminal SIMPLEQUOTE,White Nonterminal qcon]
[White Terminal SIMPLEQUOTE,White Nonterminal qvar]
[White Terminal VARID]
[White Terminal CONID]
[White Terminal QVARID]
[White Terminal QCONID]
[White Terminal DO,White Nonterminal stmtlist]
[White Terminal MDO,White Nonterminal stmtlist]
[White Terminal LABELVARID]
[White Terminal CHAR]
[White Terminal STRING]
[White Terminal INTEGER]
[White Terminal RATIONAL]
[White Terminal PRIMCHAR]
[White Terminal PRIMSTRING]
[White Terminal PRIMINTEGER]
[White Terminal PRIMWORD]
[White Terminal PRIMFLOAT]
[White Terminal PRIMDOUBLE]

["_"]
["as"]
["case","exp","of","altslist"]
["hiding"]
["if","ifgdpats"]
["let","binds","in","exp"]
["qualified"]
["forall"]
["export"]
["family"]
["signature"]
["\\\\","lcase","altslist"]
["-","fexp"]
["PREFIX_TILDE","aexp"]
["PREFIX_BANG","aexp"]
["[","]"]
["(",")"]
["(#","#)"]
["SIMPLEQUOTE","qcon"]
["SIMPLEQUOTE","qvar"]
["VARID"]
["CONID"]
["QVARID"]
["QCONID"]
["DO","stmtlist"]
["MDO","stmtlist"]
["LABELVARID"]
["CHAR"]
["STRING"]
["INTEGER"]
["RATIONAL"]
["PRIMCHAR"]
["PRIMSTRING"]
["PRIMINTEGER"]
["PRIMWORD"]
["PRIMFLOAT"]
["PRIMDOUBLE"]


Haskell
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 1, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.13s
Time:   0.91
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 2, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.01s
Time:   0.74
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 3, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.01s
Time:   7.68
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 4, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.01s
Time:  80.19
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 5, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.01s
Time: 850.63
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 6, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.01s
Time: 8968.14
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 7, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.01s
Time: 95731.70
  [Benchmark1] 
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 1, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.01s
Time:   0.05
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 2, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.02s
Time:   0.55
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 3, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.01s
Time:   6.06
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 4, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.02s
Time:  66.68
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 5, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.01s
Time: 720.97
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 6, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.02s
Time: 7764.80
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 7, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.01s
Time: 83534.17
  [Benchmark2] 
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 1, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.66s
Time:   0.09
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 2, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.89s
Time:   0.79
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 3, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.70s
Time:   8.22
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 4, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.66s
Time:  80.20
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 5, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.62s
Time: 840.72
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 6, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.63s
Time: 8978.44
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 7, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.68s
Time: 95472.16
  [Benchmark3] 
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 1, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.81s
Time:   0.04
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 2, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   1.04s
Time:   0.65
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 3, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.77s
Time:   6.47
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 4, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.67s
Time:  67.61
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 5, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.62s
Time: 716.26
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 6, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.64s
Time: 7867.59
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 7, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.63s
Time: 83512.59
  [Benchmark4] 

Finished in 355856.9614 seconds
4 examples, 0 failures

lexer> Test suite lexer-test passed
Completed 2 action(s).
