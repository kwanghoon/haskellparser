module HaskellFilter(canSearch) where

import AVL

canSearch :: String -> Bool
canSearch =
  let avl =
        foldr (\x t -> ins t x)
          (foldr (\x t -> ins t x) Nil haskell_filter_nonterminals)
            haskell_filter_terminals
  in \s -> find s avl 


haskell_filter_nonterminals =
  map fst
    [
      ("%start_parseModuleNoHaddock",["module"]),
      ("%start_parseSignature",["signature"]),
      ("%start_parseImport",["importdecl"]),
      ("%start_parseStatement",["e_stmt"]),
      ("%start_parseDeclaration",["topdecl"]),
      ("%start_parseExpression",["exp"]),
      ("%start_parsePattern",["pat"]),
      ("%start_parseTypeSignature",["sigdecl"]),
      ("%start_parseStmt",["maybe_stmt"]),
      ("%start_parseIdentifier",["identifier"]),
      ("%start_parseType",["ktype"]),
      ("%start_parseBackpack",["backpack"]),
      ("%start_parseHeader",["header"]),
      ("identifier",["qvar"]),
      ("identifier",["qcon"]),
      ("identifier",["qvarop"]),
      ("identifier",["qconop"]),
      ("identifier",["(","->",")"]),
      ("identifier",["->"]),
      -- ("backpack",["implicit_top","units","close"]),
      -- ("backpack",["{","units","}"]),
      -- ("units",["units",";","unit"]),
      -- ("units",["units",";"]),
      -- ("units",["unit"]),
      -- ("unit",["unit","pkgname","where","unitbody"]),
      -- ("unitid",["pkgname"]),
      -- ("unitid",["pkgname","[","msubsts","]"]),
      -- ("msubsts",["msubsts",",","msubst"]),
      -- ("msubsts",["msubsts",","]),
      -- ("msubsts",["msubst"]),
      -- ("msubst",["modid","=","moduleid"]),
      -- ("msubst",["modid","VARSYM","modid","VARSYM"]),
      -- ("moduleid",["VARSYM","modid","VARSYM"]),
      -- ("moduleid",["unitid",":","modid"]),
      -- ("pkgname",["STRING"]),
      -- ("pkgname",["litpkgname"]),
      -- ("litpkgname_segment",["VARID"]),
      -- ("litpkgname_segment",["CONID"]),
      -- ("litpkgname_segment",["special_id"]),
      -- ("HYPHEN",["-"]),
      -- ("HYPHEN",["PREFIX_MINUS"]),
      -- ("HYPHEN",["VARSYM"]),
      -- ("litpkgname",["litpkgname_segment"]),
      -- ("litpkgname",["litpkgname_segment","HYPHEN","litpkgname"]),
      -- ("mayberns",[]),
      -- ("mayberns",["(","rns",")"]),
      -- ("rns",["rns",",","rn"]),
      -- ("rns",["rns",","]),
      -- ("rns",["rn"]),
      -- ("rn",["modid","as","modid"]),
      -- ("rn",["modid"]),
      -- ("unitbody",["{","unitdecls","}"]),
      -- ("unitbody",["vocurly","unitdecls","close"]),
      -- ("unitdecls",["unitdecls",";","unitdecl"]),
      -- ("unitdecls",["unitdecls",";"]),
      -- ("unitdecls",["unitdecl"]),
      -- ("unitdecl",["module","maybe_src","modid","maybemodwarning","maybeexports","where","body"]),
      -- ("unitdecl",["signature","modid","maybemodwarning","maybeexports","where","body"]),
      -- ("unitdecl",["module","maybe_src","modid"]),
      -- ("unitdecl",["signature","modid"]),
      -- ("unitdecl",["dependency","unitid","mayberns"]),
      -- ("unitdecl",["dependency","signature","unitid"]),
      ("signature",["signature","modid","maybemodwarning","maybeexports","where","body"]),
      ("module",["module","modid","maybemodwarning","maybeexports","where","body"]),
      ("module",["body2"]),
      ("missing_module_keyword",[]),
      ("implicit_top",[]),
      ("maybemodwarning",["{-# DEPRECATED","strings","#-}"]),
      ("maybemodwarning",["{-# WARNING","strings","#-}"]),
      ("maybemodwarning",[]),
      ("body",["{","top","}"]),
      ("body",["vocurly","top","close"]),
      ("body2",["{","top","}"]),
      ("body2",["missing_module_keyword","top","close"]),
      ("top",["semis","top1"]),
      ("top1",["importdecls_semi","topdecls_cs_semi"]),
      ("top1",["importdecls_semi","topdecls_cs"]),
      ("top1",["importdecls"]),
      ("header",["module","modid","maybemodwarning","maybeexports","where","header_body"]),
      ("header",["signature","modid","maybemodwarning","maybeexports","where","header_body"]),
      ("header",["header_body2"]),
      ("header_body",["{","header_top"]),
      ("header_body",["vocurly","header_top"]),
      ("header_body2",["{","header_top"]),
      ("header_body2",["missing_module_keyword","header_top"]),
      ("header_top",["semis","header_top_importdecls"]),
      ("header_top_importdecls",["importdecls_semi"]),
      ("header_top_importdecls",["importdecls"]),
      ("maybeexports",["(","exportlist",")"]),
      ("maybeexports",[]),
      ("exportlist",["exportlist1"]),
      ("exportlist",[]),
      ("exportlist",["exportlist1",","]),
      ("exportlist",[","]),
      ("exportlist1",["exportlist1",",","export"]),
      ("exportlist1",["export"]),
      ("export",["qcname_ext","export_subspec"]),
      ("export",["module","modid"]),
      ("export",["pattern","qcon"]),
      ("export_subspec",[]),
      ("export_subspec",["(","qcnames",")"]),
      ("qcnames",[]),
      ("qcnames",["qcnames1"]),
      ("qcnames1",["qcnames1",",","qcname_ext_w_wildcard"]),
      ("qcnames1",["qcname_ext_w_wildcard"]),
      ("qcname_ext_w_wildcard",["qcname_ext"]),
      ("qcname_ext_w_wildcard",[".."]),
      ("qcname_ext",["qcname"]),
      ("qcname_ext",["type","oqtycon"]),
      ("qcname",["qvar"]),
      ("qcname",["oqtycon_no_varcon"]),
      ("semis1",["semis1",";"]),
      ("semis1",[";"]),
      ("semis",["semis",";"]),
      ("semis",[]),
      ("importdecls",["importdecls_semi","importdecl"]),
      ("importdecls_semi",["importdecls_semi","importdecl","semis1"]),
      ("importdecls_semi",[]),
      ("importdecl",["import","maybe_src","maybe_safe","optqualified","maybe_pkg","modid","optqualified","maybeas","maybeimpspec"]),
      ("maybe_src",["{-# SOURCE","#-}"]),
      ("maybe_src",[]),
      ("maybe_safe",["safe"]),
      ("maybe_safe",[]),
      ("maybe_pkg",["STRING"]),
      ("maybe_pkg",[]),
      ("optqualified",["qualified"]),
      ("optqualified",[]),
      ("maybeas",["as","modid"]),
      ("maybeas",[]),
      ("maybeimpspec",["impspec"]),
      ("maybeimpspec",[]),
      ("impspec",["(","exportlist",")"]),
      ("impspec",["hiding","(","exportlist",")"]),
      ("prec",[]),
      ("prec",["INTEGER"]),
      ("infix",["infix"]),
      ("infix",["infixl"]),
      ("infix",["infixr"]),
      ("ops",["ops",",","op"]),
      ("ops",["op"]),
      ("topdecls",["topdecls_semi","topdecl"]),
      ("topdecls_semi",["topdecls_semi","topdecl","semis1"]),
      ("topdecls_semi",[]),
      ("topdecls_cs",["topdecls_cs_semi","topdecl_cs"]),
      ("topdecls_cs_semi",["topdecls_cs_semi","topdecl_cs","semis1"]),
      ("topdecls_cs_semi",[]),
      ("topdecl_cs",["topdecl"]),
      ("topdecl",["cl_decl"]),
      ("topdecl",["ty_decl"]),
      ("topdecl",["standalone_kind_sig"]),
      ("topdecl",["inst_decl"]),
      ("topdecl",["stand_alone_deriving"]),
      ("topdecl",["role_annot"]),
      ("topdecl",["default","(","comma_types0",")"]),
      ("topdecl",["foreign","fdecl"]),
      ("topdecl",["{-# DEPRECATED","deprecations","#-}"]),
      ("topdecl",["{-# WARNING","warnings","#-}"]),
      ("topdecl",["{-# RULES","rules","#-}"]),
      ("topdecl",["annotation"]),
      ("topdecl",["decl_no_th"]),
      ("topdecl",["infixexp"]),
      ("cl_decl",["class","tycl_hdr","fds","where_cls"]),
      ("ty_decl",["type","type","=","ktype"]),
      ("ty_decl",["type","family","type","opt_tyfam_kind_sig","opt_injective_info","where_type_family"]),
      ("ty_decl",["data_or_newtype","capi_ctype","tycl_hdr","constrs","maybe_derivings"]),
      ("ty_decl",["data_or_newtype","capi_ctype","tycl_hdr","opt_kind_sig","gadt_constrlist","maybe_derivings"]),
      ("ty_decl",["data","family","type","opt_datafam_kind_sig"]),
      ("standalone_kind_sig",["type","sks_vars","::","sigktype"]),
      ("sks_vars",["sks_vars",",","oqtycon"]),
      ("sks_vars",["oqtycon"]),
      ("inst_decl",["instance","overlap_pragma","inst_type","where_inst"]),
      ("inst_decl",["type","instance","ty_fam_inst_eqn"]),
      ("inst_decl",["data_or_newtype","instance","capi_ctype","datafam_inst_hdr","constrs","maybe_derivings"]),
      ("inst_decl",["data_or_newtype","instance","capi_ctype","datafam_inst_hdr","opt_kind_sig","gadt_constrlist","maybe_derivings"]),
      ("overlap_pragma",["{-# OVERLAPPABLE","#-}"]),
      ("overlap_pragma",["{-# OVERLAPPING","#-}"]),
      ("overlap_pragma",["{-# OVERLAPS","#-}"]),
      ("overlap_pragma",["{-# INCOHERENT","#-}"]),
      ("overlap_pragma",[]),
      ("deriv_strategy_no_via",["stock"]),
      ("deriv_strategy_no_via",["anyclass"]),
      ("deriv_strategy_no_via",["newtype"]),
      ("deriv_strategy_via",["via","sigktype"]),
      ("deriv_standalone_strategy",["stock"]),
      ("deriv_standalone_strategy",["anyclass"]),
      ("deriv_standalone_strategy",["newtype"]),
      ("deriv_standalone_strategy",["deriv_strategy_via"]),
      ("deriv_standalone_strategy",[]),
      ("opt_injective_info",[]),
      ("opt_injective_info",["|","injectivity_cond"]),
      ("injectivity_cond",["tyvarid","->","inj_varids"]),
      ("inj_varids",["inj_varids","tyvarid"]),
      ("inj_varids",["tyvarid"]),
      ("where_type_family",[]),
      ("where_type_family",["where","ty_fam_inst_eqn_list"]),
      ("ty_fam_inst_eqn_list",["{","ty_fam_inst_eqns","}"]),
      ("ty_fam_inst_eqn_list",["vocurly","ty_fam_inst_eqns","close"]),
      ("ty_fam_inst_eqn_list",["{","..","}"]),
      ("ty_fam_inst_eqn_list",["vocurly","..","close"]),
      ("ty_fam_inst_eqns",["ty_fam_inst_eqns",";","ty_fam_inst_eqn"]),
      ("ty_fam_inst_eqns",["ty_fam_inst_eqns",";"]),
      ("ty_fam_inst_eqns",["ty_fam_inst_eqn"]),
      ("ty_fam_inst_eqns",[]),
      ("ty_fam_inst_eqn",["forall","tv_bndrs",".","type","=","ktype"]),
      ("ty_fam_inst_eqn",["type","=","ktype"]),
      ("at_decl_cls",["data","opt_family","type","opt_datafam_kind_sig"]),
      ("at_decl_cls",["type","type","opt_at_kind_inj_sig"]),
      ("at_decl_cls",["type","family","type","opt_at_kind_inj_sig"]),
      ("at_decl_cls",["type","ty_fam_inst_eqn"]),
      ("at_decl_cls",["type","instance","ty_fam_inst_eqn"]),
      ("opt_family",[]),
      ("opt_family",["family"]),
      ("opt_instance",[]),
      ("opt_instance",["instance"]),
      ("at_decl_inst",["type","opt_instance","ty_fam_inst_eqn"]),
      ("at_decl_inst",["data_or_newtype","opt_instance","capi_ctype","datafam_inst_hdr","constrs","maybe_derivings"]),
      ("at_decl_inst",["data_or_newtype","opt_instance","capi_ctype","datafam_inst_hdr","opt_kind_sig","gadt_constrlist","maybe_derivings"]),
      ("data_or_newtype",["data"]),
      ("data_or_newtype",["newtype"]),
      ("opt_kind_sig",[]),
      ("opt_kind_sig",["::","kind"]),
      ("opt_datafam_kind_sig",[]),
      ("opt_datafam_kind_sig",["::","kind"]),
      ("opt_tyfam_kind_sig",[]),
      ("opt_tyfam_kind_sig",["::","kind"]),
      ("opt_tyfam_kind_sig",["=","tv_bndr"]),
      ("opt_at_kind_inj_sig",[]),
      ("opt_at_kind_inj_sig",["::","kind"]),
      ("opt_at_kind_inj_sig",["=","tv_bndr_no_braces","|","injectivity_cond"]),
      ("tycl_hdr",["context","=>","type"]),
      ("tycl_hdr",["type"]),
      ("datafam_inst_hdr",["forall","tv_bndrs",".","context","=>","type"]),
      ("datafam_inst_hdr",["forall","tv_bndrs",".","type"]),
      ("datafam_inst_hdr",["context","=>","type"]),
      ("datafam_inst_hdr",["type"]),
      ("capi_ctype",["{-# CTYPE","STRING","STRING","#-}"]),
      ("capi_ctype",["{-# CTYPE","STRING","#-}"]),
      ("capi_ctype",[]),
      ("stand_alone_deriving",["deriving","deriv_standalone_strategy","instance","overlap_pragma","inst_type"]),
      -- ("role_annot",["type","role","oqtycon","maybe_roles"]),
      -- ("maybe_roles",[]),
      -- ("maybe_roles",["roles"]),
      -- ("roles",["role"]),
      -- ("roles",["roles","role"]),
      -- ("role",["VARID"]),
      -- ("role",["_"]),
      -- ("pattern_synonym_decl",["pattern","pattern_synonym_lhs","=","pat"]),
      -- ("pattern_synonym_decl",["pattern","pattern_synonym_lhs","<-","pat"]),
      -- ("pattern_synonym_decl",["pattern","pattern_synonym_lhs","<-","pat","where_decls"]),
      -- ("pattern_synonym_lhs",["con","vars0"]),
      -- ("pattern_synonym_lhs",["varid","conop","varid"]),
      -- ("pattern_synonym_lhs",["con","{","cvars1","}"]),
      -- ("vars0",[]),
      -- ("vars0",["varid","vars0"]),
      -- ("cvars1",["var"]),
      -- ("cvars1",["var",",","cvars1"]),
      -- ("where_decls",["where","{","decls","}"]),
      -- ("where_decls",["where","vocurly","decls","close"]),
      -- ("pattern_synonym_sig",["pattern","con_list","::","sigtype"]),
      -- ("qvarcon",["qvar"]),
      -- ("qvarcon",["qcon"]),
      ("decl_cls",["at_decl_cls"]),
      ("decl_cls",["decl"]),
      ("decl_cls",["default","infixexp","::","sigtype"]),
      ("decls_cls",["decls_cls",";","decl_cls"]),
      ("decls_cls",["decls_cls",";"]),
      ("decls_cls",["decl_cls"]),
      ("decls_cls",[]),
      ("decllist_cls",["{","decls_cls","}"]),
      ("decllist_cls",["vocurly","decls_cls","close"]),
      ("where_cls",["where","decllist_cls"]),
      ("where_cls",[]),
      ("decl_inst",["at_decl_inst"]),
      ("decl_inst",["decl"]),
      ("decls_inst",["decls_inst",";","decl_inst"]),
      ("decls_inst",["decls_inst",";"]),
      ("decls_inst",["decl_inst"]),
      ("decls_inst",[]),
      ("decllist_inst",["{","decls_inst","}"]),
      ("decllist_inst",["vocurly","decls_inst","close"]),
      ("where_inst",["where","decllist_inst"]),
      ("where_inst",[]),
      ("decls",["decls",";","decl"]),
      ("decls",["decls",";"]),
      ("decls",["decl"]),
      ("decls",[]),
      ("decllist",["{","decls","}"]),
      ("decllist",["vocurly","decls","close"]),
      ("binds",["decllist"]),
      ("binds",["{","dbinds","}"]),
      ("binds",["vocurly","dbinds","close"]),
      ("wherebinds",["where","binds"]),
      ("wherebinds",[]),
      -- ("rules",["rules",";","rule"]),
      -- ("rules",["rules",";"]),
      -- ("rules",["rule"]),
      -- ("rules",[]),
      -- ("rule",["STRING","rule_activation","rule_foralls","infixexp","=","exp"]),
      -- ("rule_activation",[]),
      -- ("rule_activation",["rule_explicit_activation"]),
      -- ("rule_activation_marker",["PREFIX_TILDE"]),
      -- ("rule_activation_marker",["VARSYM"]),
      -- ("rule_explicit_activation",["[","INTEGER","]"]),
      -- ("rule_explicit_activation",["[","rule_activation_marker","INTEGER","]"]),
      -- ("rule_explicit_activation",["[","rule_activation_marker","]"]),
      -- ("rule_foralls",["forall","rule_vars",".","forall","rule_vars","."]),
      -- ("rule_foralls",["forall","rule_vars","."]),
      -- ("rule_foralls",[]),
      -- ("rule_vars",["rule_var","rule_vars"]),
      -- ("rule_vars",[]),
      -- ("rule_var",["varid"]),
      -- ("rule_var",["(","varid","::","ctype",")"]),
      -- ("warnings",["warnings",";","warning"]),
      -- ("warnings",["warnings",";"]),
      -- ("warnings",["warning"]),
      -- ("warnings",[]),
      -- ("warning",["namelist","strings"]),
      -- ("deprecations",["deprecations",";","deprecation"]),
      -- ("deprecations",["deprecations",";"]),
      -- ("deprecations",["deprecation"]),
      -- ("deprecations",[]),
      -- ("deprecation",["namelist","strings"]),
      ("strings",["STRING"]),
      ("strings",["[","stringlist","]"]),
      ("stringlist",["stringlist",",","STRING"]),
      ("stringlist",["STRING"]),
      ("stringlist",[]),
      -- ("annotation",["{-# ANN","name_var","aexp","#-}"]),
      -- ("annotation",["{-# ANN","type","otycon","aexp","#-}"]),
      -- ("annotation",["{-# ANN","module","aexp","#-}"]),
      -- ("fdecl",["import","callconv","safety","fspec"]),
      -- ("fdecl",["import","callconv","fspec"]),
      -- ("fdecl",["export","callconv","fspec"]),
      -- ("callconv",["stdcall"]),
      -- ("callconv",["ccall"]),
      -- ("callconv",["capi"]),
      -- ("callconv",["prim"]),
      -- ("callconv",["javascript"]),
      -- ("safety",["unsafe"]),
      -- ("safety",["safe"]),
      -- ("safety",["interruptible"]),
      -- ("fspec",["STRING","var","::","sigtype"]),
      -- ("fspec",["var","::","sigtype"]),
      ("opt_sig",[]),
      ("opt_sig",["::","ctype"]),
      ("opt_tyconsig",[]),
      ("opt_tyconsig",["::","gtycon"]),
      ("sigktype",["sigtype"]),
      ("sigktype",["ctype","::","kind"]),
      ("sigtype",["ctype"]),
      ("sig_vars",["sig_vars",",","var"]),
      ("sig_vars",["var"]),
      ("sigtypes1",["sigtype"]),
      ("sigtypes1",["sigtype",",","sigtypes1"]),
      -- ("unpackedness",["{-# UNPACK","#-}"]),
      -- ("unpackedness",["{-# NOUNPACK","#-}"]),
      ("forall_telescope",["forall","tv_bndrs","."]),
      ("forall_telescope",["forall","tv_bndrs","->"]),
      ("ktype",["ctype"]),
      ("ktype",["ctype","::","kind"]),
      ("ctype",["forall_telescope","ctype"]),
      ("ctype",["context","=>","ctype"]),
      ("ctype",["ipvar","::","type"]),
      ("ctype",["type"]),
      ("context",["btype"]),
      ("type",["btype"]),
      ("type",["btype","->","ctype"]),
      ("type",["btype","mult","->","ctype"]),
      ("type",["btype","->.","ctype"]),
      ("mult",["PREFIX_PERCENT","atype"]),
      ("btype",["infixtype"]),
      ("infixtype",["ftype"]),
      ("infixtype",["ftype","tyop","infixtype"]),
      ("infixtype",["unpackedness","infixtype"]),
      ("ftype",["atype"]),
      ("ftype",["tyop"]),
      ("ftype",["ftype","tyarg"]),
      ("ftype",["ftype","PREFIX_AT","atype"]),
      ("tyarg",["atype"]),
      ("tyarg",["unpackedness","atype"]),
      ("tyop",["qtyconop"]),
      ("tyop",["tyvarop"]),
      ("tyop",["SIMPLEQUOTE","qconop"]),
      ("tyop",["SIMPLEQUOTE","varop"]),
      ("atype",["ntgtycon"]),
      ("atype",["tyvar"]),
      ("atype",["*"]),
      ("atype",["PREFIX_TILDE","atype"]),
      ("atype",["PREFIX_BANG","atype"]),
      ("atype",["{","fielddecls","}"]),
      ("atype",["(",")"]),
      ("atype",["(","ktype",",","comma_types1",")"]),
      ("atype",["(#","#)"]),
      ("atype",["(#","comma_types1","#)"]),
      ("atype",["(#","bar_types2","#)"]),
      ("atype",["[","ktype","]"]),
      ("atype",["(","ktype",")"]),
      ("atype",["quasiquote"]),
      ("atype",["splice_untyped"]),
      ("atype",["SIMPLEQUOTE","qcon_nowiredlist"]),
      ("atype",["SIMPLEQUOTE","(","ktype",",","comma_types1",")"]),
      ("atype",["SIMPLEQUOTE","[","comma_types0","]"]),
      ("atype",["SIMPLEQUOTE","var"]),
      ("atype",["[","ktype",",","comma_types1","]"]),
      ("atype",["INTEGER"]),
      ("atype",["CHAR"]),
      ("atype",["STRING"]),
      ("atype",["_"]),
      ("inst_type",["sigtype"]),
      ("deriv_types",["sigktype"]),
      ("deriv_types",["sigktype",",","deriv_types"]),
      ("comma_types0",["comma_types1"]),
      ("comma_types0",[]),
      ("comma_types1",["ktype"]),
      ("comma_types1",["ktype",",","comma_types1"]),
      ("bar_types2",["ktype","|","ktype"]),
      ("bar_types2",["ktype","|","bar_types2"]),
      ("tv_bndrs",["tv_bndr","tv_bndrs"]),
      ("tv_bndrs",[]),
      ("tv_bndr",["tv_bndr_no_braces"]),
      ("tv_bndr",["{","tyvar","}"]),
      ("tv_bndr",["{","tyvar","::","kind","}"]),
      ("tv_bndr_no_braces",["tyvar"]),
      ("tv_bndr_no_braces",["(","tyvar","::","kind",")"]),
      ("fds",[]),
      ("fds",["|","fds1"]),
      ("fds1",["fds1",",","fd"]),
      ("fds1",["fd"]),
      ("fd",["varids0","->","varids0"]),
      ("varids0",[]),
      ("varids0",["varids0","tyvar"]),
      ("kind",["ctype"]),
      ("gadt_constrlist",["where","{","gadt_constrs","}"]),
      ("gadt_constrlist",["where","vocurly","gadt_constrs","close"]),
      ("gadt_constrlist",[]),
      ("gadt_constrs",["gadt_constr",";","gadt_constrs"]),
      ("gadt_constrs",["gadt_constr"]),
      ("gadt_constrs",[]),
      ("gadt_constr",["optSemi","con_list","::","sigtype"]),
      ("constrs",["=","constrs1"]),
      ("constrs1",["constrs1","|","constr"]),
      ("constrs1",["constr"]),
      ("constr",["forall","context","=>","constr_stuff"]),
      ("constr",["forall","constr_stuff"]),
      ("forall",["forall","tv_bndrs","."]),
      ("forall",[]),
      ("constr_stuff",["infixtype"]),
      ("fielddecls",[]),
      ("fielddecls",["fielddecls1"]),
      ("fielddecls1",["fielddecl",",","fielddecls1"]),
      ("fielddecls1",["fielddecl"]),
      ("fielddecl",["sig_vars","::","ctype"]),
      ("maybe_derivings",[]),
      ("maybe_derivings",["derivings"]),
      ("derivings",["derivings","deriving"]),
      ("derivings",["deriving"]),
      ("deriving",["deriving","deriv_clause_types"]),
      ("deriving",["deriving","deriv_strategy_no_via","deriv_clause_types"]),
      ("deriving",["deriving","deriv_clause_types","deriv_strategy_via"]),
      ("deriv_clause_types",["qtycon"]),
      ("deriv_clause_types",["(",")"]),
      ("deriv_clause_types",["(","deriv_types",")"]),
      ("decl_no_th",["sigdecl"]),
      ("decl_no_th",["infixexp","opt_sig","rhs"]),
      ("decl_no_th",["pattern_synonym_decl"]),
      ("decl",["decl_no_th"]),
      ("decl",["splice_exp"]),
      ("rhs",["=","exp","wherebinds"]),
      ("rhs",["gdrhs","wherebinds"]),
      ("gdrhs",["gdrhs","gdrh"]),
      ("gdrhs",["gdrh"]),
      ("gdrh",["|","guardquals","=","exp"]),
      ("sigdecl",["infixexp","::","sigtype"]),
      ("sigdecl",["var",",","sig_vars","::","sigtype"]),
      ("sigdecl",["infix","prec","ops"]),
      ("sigdecl",["pattern_synonym_sig"]),
      ("sigdecl",["{-# COMPLETE","con_list","opt_tyconsig","#-}"]),
      ("sigdecl",["{-# INLINE","activation","qvarcon","#-}"]),
      ("sigdecl",["{-# SCC","qvar","#-}"]),
      ("sigdecl",["{-# SCC","qvar","STRING","#-}"]),
      ("sigdecl",["{-# SPECIALISE","activation","qvar","::","sigtypes1","#-}"]),
      ("sigdecl",["{-# SPECIALISE_INLINE","activation","qvar","::","sigtypes1","#-}"]),
      ("sigdecl",["{-# SPECIALISE","instance","inst_type","#-}"]),
      ("sigdecl",["{-# MINIMAL","name_boolformula_opt","#-}"]),
      ("activation",[]),
      ("activation",["explicit_activation"]),
      ("explicit_activation",["[","INTEGER","]"]),
      ("explicit_activation",["[","rule_activation_marker","INTEGER","]"]),
      -- ("quasiquote",["TH_QUASIQUOTE"]),
      -- ("quasiquote",["TH_QQUASIQUOTE"]),
      ("exp",["infixexp","::","ctype"]),
      ("exp",["infixexp","-<","exp"]),
      ("exp",["infixexp",">-","exp"]),
      ("exp",["infixexp","-<<","exp"]),
      ("exp",["infixexp",">>-","exp"]),
      ("exp",["infixexp"]),
      ("exp",["exp_prag__exp__"]),
      ("infixexp",["exp10"]),
      ("infixexp",["infixexp","qop","exp10p"]),
      ("exp10p",["exp10"]),
      ("exp10p",["exp_prag__exp10p__"]),
      ("exp10",["-","fexp"]),
      ("exp10",["fexp"]),
      ("optSemi",[";"]),
      ("optSemi",[]),
      -- ("prag_e",["{-# SCC","STRING","#-}"]),
      -- ("prag_e",["{-# SCC","VARID","#-}"]),
      ("fexp",["fexp","aexp"]),
      ("fexp",["fexp","PREFIX_AT","atype"]),
      ("fexp",["static","aexp"]),
      ("fexp",["aexp"]),
      ("aexp",["qvar","TIGHT_INFIX_AT","aexp"]),
      ("aexp",["PREFIX_TILDE","aexp"]),
      ("aexp",["PREFIX_BANG","aexp"]),
      ("aexp",["PREFIX_MINUS","aexp"]),
      ("aexp",["\\\\","apats","->","exp"]),
      ("aexp",["let","binds","in","exp"]),
      ("aexp",["\\\\","lcase","altslist"]),
      ("aexp",["if","exp","optSemi","then","exp","optSemi","else","exp"]),
      ("aexp",["if","ifgdpats"]),
      ("aexp",["case","exp","of","altslist"]),
      ("aexp",["DO","stmtlist"]),
      ("aexp",["MDO","stmtlist"]),
      ("aexp",["proc","aexp","->","exp"]),
      ("aexp",["aexp1"]),
      ("aexp1",["aexp1","{","fbinds","}"]),
      ("aexp1",["aexp1","TIGHT_INFIX_PROJ","field"]),
      ("aexp1",["aexp2"]),
      ("aexp2",["qvar"]),
      ("aexp2",["qcon"]),
      ("aexp2",["ipvar"]),
      ("aexp2",["overloaded_label"]),
      ("aexp2",["literal"]),
      ("aexp2",["INTEGER"]),
      ("aexp2",["RATIONAL"]),
      ("aexp2",["(","texp",")"]),
      ("aexp2",["(","tup_exprs",")"]),
      ("aexp2",["(","projection",")"]),
      ("aexp2",["(#","texp","#)"]),
      ("aexp2",["(#","tup_exprs","#)"]),
      ("aexp2",["[","list","]"]),
      ("aexp2",["_"]),
      ("aexp2",["splice_untyped"]),
      ("aexp2",["splice_typed"]),
      ("aexp2",["SIMPLEQUOTE","qvar"]),
      ("aexp2",["SIMPLEQUOTE","qcon"]),
      ("aexp2",["TH_TY_QUOTE","tyvar"]),
      ("aexp2",["TH_TY_QUOTE","gtycon"]),
      ("aexp2",["TH_TY_QUOTE"]),
      ("aexp2",["[|","exp","|]"]),
      ("aexp2",["[||","exp","||]"]),
      ("aexp2",["[t|","ktype","|]"]),
      ("aexp2",["[p|","infixexp","|]"]),
      ("aexp2",["[d|","cvtopbody","|]"]),
      ("aexp2",["quasiquote"]),
      ("aexp2",["(|","aexp","cmdargs","|)"]),
      ("projection",["projection","TIGHT_INFIX_PROJ","field"]),
      ("projection",["PREFIX_PROJ","field"]),
      -- ("splice_exp",["splice_untyped"]),
      -- ("splice_exp",["splice_typed"]),
      -- ("splice_untyped",["PREFIX_DOLLAR","aexp2"]),
      -- ("splice_typed",["PREFIX_DOLLAR_DOLLAR","aexp2"]),
      ("cmdargs",["cmdargs","acmd"]),
      ("cmdargs",[]),
      ("acmd",["aexp"]),
      ("cvtopbody",["{","cvtopdecls0","}"]),
      ("cvtopbody",["vocurly","cvtopdecls0","close"]),
      ("cvtopdecls0",["topdecls_semi"]),
      ("cvtopdecls0",["topdecls"]),
      ("texp",["exp"]),
      ("texp",["infixexp","qop"]),
      ("texp",["qopm","infixexp"]),
      ("texp",["exp","->","texp"]),
      ("tup_exprs",["texp","commas_tup_tail"]),
      ("tup_exprs",["commas","tup_tail"]),
      ("tup_exprs",["texp","bars"]),
      ("tup_exprs",["bars","texp","bars0"]),
      ("commas_tup_tail",["commas","tup_tail"]),
      ("tup_tail",["texp","commas_tup_tail"]),
      ("tup_tail",["texp"]),
      ("tup_tail",[]),
      ("list",["texp"]),
      ("list",["lexps"]),
      ("list",["texp",".."]),
      ("list",["texp",",","exp",".."]),
      ("list",["texp","..","exp"]),
      ("list",["texp",",","exp","..","exp"]),
      ("list",["texp","|","flattenedpquals"]),
      ("lexps",["lexps",",","texp"]),
      ("lexps",["texp",",","texp"]),
      ("flattenedpquals",["pquals"]),
      ("pquals",["squals","|","pquals"]),
      ("pquals",["squals"]),
      ("squals",["squals",",","transformqual"]),
      ("squals",["squals",",","qual"]),
      ("squals",["transformqual"]),
      ("squals",["qual"]),
      ("transformqual",["then","exp"]),
      ("transformqual",["then","exp","by","exp"]),
      ("transformqual",["then","group","using","exp"]),
      ("transformqual",["then","group","by","exp","using","exp"]),
      ("guardquals",["guardquals1"]),
      ("guardquals1",["guardquals1",",","qual"]),
      ("guardquals1",["qual"]),
      ("altslist",["{","alts","}"]),
      ("altslist",["vocurly","alts","close"]),
      ("altslist",["{","}"]),
      ("altslist",["vocurly","close"]),
      ("alts",["alts1"]),
      ("alts",[";","alts"]),
      ("alts1",["alts1",";","alt"]),
      ("alts1",["alts1",";"]),
      ("alts1",["alt"]),
      ("alt",["pat","alt_rhs"]),
      ("alt_rhs",["ralt","wherebinds"]),
      ("ralt",["->","exp"]),
      ("ralt",["gdpats"]),
      ("gdpats",["gdpats","gdpat"]),
      ("gdpats",["gdpat"]),
      ("ifgdpats",["{","gdpats","}"]),
      ("ifgdpats",["gdpats","close"]),
      ("gdpat",["|","guardquals","->","exp"]),
      ("pat",["exp"]),
      ("bindpat",["exp"]),
      ("apat",["aexp"]),
      ("apats",["apat","apats"]),
      ("apats",[]),
      ("stmtlist",["{","stmts","}"]),
      ("stmtlist",["vocurly","stmts","close"]),
      ("stmts",["stmts",";","stmt"]),
      ("stmts",["stmts",";"]),
      ("stmts",["stmt"]),
      ("stmts",[]),
      ("maybe_stmt",["stmt"]),
      ("maybe_stmt",[]),
      ("e_stmt",["stmt"]),
      ("stmt",["qual"]),
      ("stmt",["rec","stmtlist"]),
      ("qual",["bindpat","<-","exp"]),
      ("qual",["exp"]),
      ("qual",["let","binds"]),
      ("fbinds",["fbinds1"]),
      ("fbinds",[]),
      ("fbinds1",["fbind",",","fbinds1"]),
      ("fbinds1",["fbind"]),
      ("fbinds1",[".."]),
      ("fbind",["qvar","=","texp"]),
      ("fbind",["qvar"]),
      ("fbind",["field","TIGHT_INFIX_PROJ","fieldToUpdate","=","texp"]),
      ("fbind",["field","TIGHT_INFIX_PROJ","fieldToUpdate"]),
      ("fieldToUpdate",["fieldToUpdate","TIGHT_INFIX_PROJ","field"]),
      ("fieldToUpdate",["field"]),
      ("dbinds",["dbinds",";","dbind"]),
      ("dbinds",["dbinds",";"]),
      ("dbinds",["dbind"]),
      ("dbind",["ipvar","=","exp"]),
      ("ipvar",["IPDUPVARID"]),
      ("overloaded_label",["LABELVARID"]),
      ("name_boolformula_opt",["name_boolformula"]),
      ("name_boolformula_opt",[]),
      ("name_boolformula",["name_boolformula_and"]),
      ("name_boolformula",["name_boolformula_and","|","name_boolformula"]),
      ("name_boolformula_and",["name_boolformula_and_list"]),
      ("name_boolformula_and_list",["name_boolformula_atom"]),
      ("name_boolformula_and_list",["name_boolformula_atom",",","name_boolformula_and_list"]),
      ("name_boolformula_atom",["(","name_boolformula",")"]),
      ("name_boolformula_atom",["name_var"]),
      ("namelist",["name_var"]),
      ("namelist",["name_var",",","namelist"]),
      ("name_var",["var"]),
      ("name_var",["con"]),
      ("qcon_nowiredlist",["gen_qcon"]),
      ("qcon_nowiredlist",["sysdcon_nolist"]),
      ("qcon",["gen_qcon"]),
      ("qcon",["sysdcon"]),
      ("gen_qcon",["qconid"]),
      ("gen_qcon",["(","qconsym",")"]),
      ("con",["conid"]),
      ("con",["(","consym",")"]),
      ("con",["sysdcon"]),
      ("con_list",["con"]),
      ("con_list",["con",",","con_list"]),
      ("sysdcon_nolist",["(",")"]),
      ("sysdcon_nolist",["(","commas",")"]),
      ("sysdcon_nolist",["(#","#)"]),
      ("sysdcon_nolist",["(#","commas","#)"]),
      ("sysdcon",["sysdcon_nolist"]),
      ("sysdcon",["[","]"]),
      ("conop",["consym"]),
      ("conop",["`","conid","`"]),
      ("qconop",["qconsym"]),
      ("qconop",["`","qconid","`"]),
      ("gtycon",["ntgtycon"]),
      ("gtycon",["(",")"]),
      ("gtycon",["(#","#)"]),
      ("ntgtycon",["oqtycon"]),
      ("ntgtycon",["(","commas",")"]),
      ("ntgtycon",["(#","commas","#)"]),
      ("ntgtycon",["(","->",")"]),
      ("ntgtycon",["[","]"]),
      ("oqtycon",["qtycon"]),
      ("oqtycon",["(","qtyconsym",")"]),
      ("oqtycon_no_varcon",["qtycon"]),
      ("oqtycon_no_varcon",["(","QCONSYM",")"]),
      ("oqtycon_no_varcon",["(","CONSYM",")"]),
      ("oqtycon_no_varcon",["(",":",")"]),
      ("qtyconop",["qtyconsym"]),
      ("qtyconop",["`","qtycon","`"]),
      ("qtycon",["QCONID"]),
      ("qtycon",["tycon"]),
      ("tycon",["CONID"]),
      ("qtyconsym",["QCONSYM"]),
      ("qtyconsym",["QVARSYM"]),
      ("qtyconsym",["tyconsym"]),
      ("tyconsym",["CONSYM"]),
      ("tyconsym",["VARSYM"]),
      ("tyconsym",[":"]),
      ("tyconsym",["-"]),
      ("tyconsym",["."]),
      ("otycon",["tycon"]),
      ("otycon",["(","tyconsym",")"]),
      ("op",["varop"]),
      ("op",["conop"]),
      ("op",["->"]),
      ("varop",["varsym"]),
      ("varop",["`","varid","`"]),
      ("qop",["qvarop"]),
      ("qop",["qconop"]),
      ("qop",["hole_op"]),
      ("qopm",["qvaropm"]),
      ("qopm",["qconop"]),
      ("qopm",["hole_op"]),
      ("hole_op",["`","_","`"]),
      ("qvarop",["qvarsym"]),
      ("qvarop",["`","qvarid","`"]),
      ("qvaropm",["qvarsym_no_minus"]),
      ("qvaropm",["`","qvarid","`"]),
      ("tyvar",["tyvarid"]),
      ("tyvarop",["`","tyvarid","`"]),
      ("tyvarid",["VARID"]),
      ("tyvarid",["special_id"]),
      ("tyvarid",["unsafe"]),
      ("tyvarid",["safe"]),
      ("tyvarid",["interruptible"]),
      ("var",["varid"]),
      ("var",["(","varsym",")"]),
      ("qvar",["qvarid"]),
      ("qvar",["(","varsym",")"]),
      ("qvar",["(","qvarsym1",")"]),
      ("field",["VARID"]),
      ("qvarid",["varid"]),
      ("qvarid",["QVARID"]),
      ("varid",["VARID"]),
      ("varid",["special_id"]),
      ("varid",["unsafe"]),
      ("varid",["safe"]),
      ("varid",["interruptible"]),
      ("varid",["forall"]),
      ("varid",["family"]),
      ("varid",["role"]),
      ("qvarsym",["varsym"]),
      ("qvarsym",["qvarsym1"]),
      ("qvarsym_no_minus",["varsym_no_minus"]),
      ("qvarsym_no_minus",["qvarsym1"]),
      ("qvarsym1",["QVARSYM"]),
      ("varsym",["varsym_no_minus"]),
      ("varsym",["-"]),
      ("varsym_no_minus",["VARSYM"]),
      ("varsym_no_minus",["special_sym"]),
      ("special_id",["as"]),
      ("special_id",["qualified"]),
      ("special_id",["hiding"]),
      ("special_id",["export"]),
      ("special_id",["label"]),
      ("special_id",["dynamic"]),
      ("special_id",["stdcall"]),
      ("special_id",["ccall"]),
      ("special_id",["capi"]),
      ("special_id",["prim"]),
      ("special_id",["javascript"]),
      ("special_id",["group"]),
      ("special_id",["stock"]),
      ("special_id",["anyclass"]),
      ("special_id",["via"]),
      ("special_id",["unit"]),
      ("special_id",["dependency"]),
      ("special_id",["signature"]),
      ("special_sym",["."]),
      ("special_sym",["*"]),
      ("qconid",["conid"]),
      ("qconid",["QCONID"]),
      ("conid",["CONID"]),
      ("qconsym",["consym"]),
      ("qconsym",["QCONSYM"]),
      ("consym",["CONSYM"]),
      ("consym",[":"]),
      ("literal",["CHAR"]),
      ("literal",["STRING"]),
      ("literal",["PRIMINTEGER"]),
      ("literal",["PRIMWORD"]),
      ("literal",["PRIMCHAR"]),
      ("literal",["PRIMSTRING"]),
      ("literal",["PRIMFLOAT"]),
      ("literal",["PRIMDOUBLE"]),
      ("close",["vccurly"]),
      ("close",["error"]),                       -- 806 (805 from zero)
      ("modid",["CONID"]),                       -- 807
      ("modid",["QCONID"]),                      -- 808
      ("commas",["commas",","]),                 -- 809
      ("commas",[","]),                          -- 810
      ("bars0",["bars"]),                        -- 811
      ("bars0",[]),                              -- 812
      ("bars",["bars","|"]),                     -- 813
      ("bars",["|"])                            -- 814
      -- ("exp_prag__exp__",["prag_e","exp"]),      -- 815
      -- ("exp_prag__exp10p__",["prag_e","exp10p"]) -- 816
    ]

haskell_filter_terminals =
  [
    "_",
    "as",
    "case",
    "class",
    "data",
    "default",
    "deriving",
    "else",
    "hiding",
    "if",
    "import",
    "in",
    "infix",
    "infixl",
    "infixr",
    "instance",
    "let",
    "module",
    "newtype",
    "of",
    "qualified",
    "then",
    "type",
    "where",
    "forall",
  -- fromToken (ITforeign) = "foreign"
    "export",
  -- fromToken (ITlabel) = "label"
  -- fromToken (ITdynamic) = "dynamic"
  -- fromToken (ITsafe) = "safe"
  -- fromToken (ITinterruptible) = "interruptible"
  -- fromToken (ITunsafe) = "unsafe"
    "family",
  -- -- fromToken (ITrole) = "role"
  -- fromToken (ITstdcallconv) = "stdcall"
  -- fromToken (ITccallconv) = "ccall"
  -- fromToken (ITcapiconv) = "capi"
  -- fromToken (ITprimcallconv) = "prim"
  -- fromToken (ITjavascriptcallconv) = "javascript"
  -- fromToken (ITproc) = "proc"
  -- fromToken (ITrec) = "rec"
  -- fromToken (ITgroup) = "group"
  -- fromToken (ITby) = "by"
  -- fromToken (ITusing) = "using"
  -- fromToken (ITpattern) = "pattern"
  -- fromToken (ITstatic) = "static"
  -- fromToken (ITstock) = "stock"
  -- fromToken (ITanyclass) = "anyclass"
  -- fromToken (ITvia) = "via"
  -- fromToken (ITunit) = "unit"
  -- fromToken (ITsignature) = "signature"
  -- fromToken (ITdependency) = "dependency"
  -- fromToken ((ITinline_prag _ _ _)) = "{-# INLINE"
  -- fromToken ((ITspec_prag _)) = "{-# SPECIALISE"
  -- fromToken ((ITspec_inline_prag _ _)) = "{-# SPECIALISE_INLINE"
  -- fromToken ((ITsource_prag _)) = "{-# SOURCE"
  -- fromToken ((ITrules_prag _)) = "{-# RULES"
  -- fromToken ((ITscc_prag _)) = "{-# SCC"
  -- fromToken ((ITdeprecated_prag _)) = "{-# DEPRECATED"
  -- fromToken ((ITwarning_prag _)) = "{-# WARNING"
  -- fromToken ((ITunpack_prag _)) = "{-# UNPACK"
  -- fromToken ((ITnounpack_prag _)) = "{-# NOUNPACK"
  -- fromToken ((ITann_prag _)) = "{-# ANN"
  -- fromToken ((ITminimal_prag _)) = "{-# MINIMAL"
  -- fromToken ((ITctype _)) = "{-# CTYPE"
  -- fromToken ((IToverlapping_prag _)) = "{-# OVERLAPPING"
  -- fromToken ((IToverlappable_prag _)) = "{-# OVERLAPPABLE"
  -- fromToken ((IToverlaps_prag _)) = "{-# OVERLAPS"
  -- fromToken ((ITincoherent_prag _)) = "{-# INCOHERENT"
  -- fromToken ((ITcomplete_prag _)) = "{-# COMPLETE"
  -- fromToken (ITclose_prag) = "#-}"
    "..",
    ":",
    "::",
    "=",
    "\\\\",
    "lcase",
    "|",
    "<-",
    "->",
--  fromToken (ITlolly) = "->."
    "TIGHT_INFIX_AT",
    "=>",
    "-",
    "PREFIX_TILDE",
    "PREFIX_BANG",
--  fromToken (ITprefixminus) = "PREFIX_MINUS"
    "*",
  -- fromToken ((ITlarrowtail _)) = "-<"
  -- fromToken ((ITrarrowtail _)) = ">-"
  -- fromToken ((ITLarrowtail _)) = "-<<"
  -- fromToken ((ITRarrowtail _)) = ">>-"
    ".",
--  fromToken ((ITproj True)) = "PREFIX_PROJ"
--  fromToken ((ITproj False)) = "TIGHT_INFIX_PROJ"
    "PREFIX_AT",
--  fromToken (ITpercent) = "PREFIX_PERCENT"
    "{",
    "}",
  -- fromToken (ITvocurly) = "vocurly"
  -- fromToken (ITvccurly) = "vccurly"
    "[",
    "]",
    "(",
    ")",
    "(#",
    "#)",
  -- fromToken ((IToparenbar _)) = "(|"
  -- fromToken ((ITcparenbar _)) = "|)"
    ";",
    ",",
    "`",
    "SIMPLEQUOTE",
    "VARID",
    "CONID",
    "VARSYM", -- unpackFS fs 
    "CONSYM", -- unpackFS fs 
    "QVARID",
    "QCONID",
    "QVARSYM", -- unpackFS fs1 ++ "." ++ unpackFS fs2 
    "QCONSYM", -- unpackFS fs1 ++ "." ++ unpackFS fs2 
    "DO",                      -- ITdo _
    "MDO",                  -- ITmdo _ 
  --  fromToken ((ITdupipvarid   _)) = "IPDUPVARID"
    "LABELVARID",
    "CHAR",
    "STRING",
    "INTEGER",
    "RATIONAL",
    "PRIMCHAR",
    "PRIMSTRING",
    "PRIMINTEGER",
    "PRIMWORD",
    "PRIMFLOAT",
    "PRIMDOUBLE"
  -- fromToken ((ITopenExpQuote _ _)) = "[|"
  -- fromToken (ITopenPatQuote) = "[p|"
  -- fromToken (ITopenTypQuote) = "[t|"
  -- fromToken (ITopenDecQuote) = "[d|"
  -- fromToken ((ITcloseQuote _)) = "|]"
  -- fromToken ((ITopenTExpQuote _)) = "[||"
  -- fromToken (ITcloseTExpQuote) = "||]"
  --  fromToken (ITdollar) = "PREFIX_DOLLAR"
  --  fromToken (ITdollardollar) = "PREFIX_DOLLAR_DOLLAR"
  -- fromToken (ITtyQuote) = "TH_TY_QUOTE"
  -- fromToken ((ITquasiQuote _)) = "TH_QUASIQUOTE"
  -- fromToken ((ITqQuasiQuote _)) = "TH_QQUASIQUOTE"
  --  fromToken (ITeof) = "%eof"
  -- fromToken (???) = error
  ]
